{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aluno\\\\Documents\\\\website-cancro-master\\\\src\\\\components\\\\monitoramento\\\\plantas.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { logoutUser } from \"../../actions\";\nimport { compose } from 'redux';\nimport { myFirebase as firebase } from \"../../firebase/firebase\";\n\nclass Plantas extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onCollectionUpdate = querySnapshot => {\n      const plantas = [];\n      querySnapshot.forEach(doc => {\n        const _doc$data = doc.data(),\n              nome = _doc$data.nome,\n              descricao = _doc$data.descricao,\n              latitude = _doc$data.latitude,\n              longitude = _doc$data.longitude,\n              email = _doc$data.email;\n\n        plantas.push({\n          key: doc.id,\n          nome,\n          descricao,\n          latitude,\n          longitude,\n          email\n        });\n      });\n      this.setState({\n        plantas\n      });\n    };\n\n    this.handleLogout = () => {\n      const dispatch = this.props.dispatch;\n      dispatch(logoutUser());\n    };\n\n    this.ref = firebase.firestore().collection('plantas');\n    this.unsubscribe = null;\n    this.state = {\n      plantas: []\n    };\n  }\n\n  componentDidMount() {\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\n  }\n\n  render() {\n    const _this$props = this.props,\n          isLoggingOut = _this$props.isLoggingOut,\n          logoutError = _this$props.logoutError;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"divTitulo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Plantas\")), React.createElement(\"div\", {\n      className: \"fundo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Nome\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Descri\\xE7\\xE3o\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Latitude\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Longitude\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Email\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, this.state.plantas.map(planta => React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, planta.nome), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, planta.descricao), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, planta.latitude), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, planta.longitude), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, planta.email))))), React.createElement(\"button\", {\n      className: \"myButton\",\n      onClick: this.handleLogout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Sair\"), isLoggingOut && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Logging Out....\"), logoutError && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Error logging out\")));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    isLoggingOut: state.auth.isLoggingOut,\n    logoutError: state.auth.logoutError\n  };\n};\n\nexport default compose(connect(mapStateToProps))(Plantas);","map":{"version":3,"sources":["C:/Users/Aluno/Documents/website-cancro-master/src/components/monitoramento/plantas.js"],"names":["React","Component","connect","logoutUser","compose","myFirebase","firebase","Plantas","constructor","props","onCollectionUpdate","querySnapshot","plantas","forEach","doc","data","nome","descricao","latitude","longitude","email","push","key","id","setState","handleLogout","dispatch","ref","firestore","collection","unsubscribe","state","componentDidMount","onSnapshot","render","isLoggingOut","logoutError","map","planta","mapStateToProps","auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logoutUser } from \"../../actions\";\r\nimport { compose } from 'redux';\r\nimport { myFirebase as firebase } from \"../../firebase/firebase\";\r\n\r\nclass Plantas extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.ref = firebase.firestore().collection('plantas');\r\n    this.unsubscribe = null;\r\n    this.state = {\r\n      plantas: []\r\n    };\r\n  }\r\n\r\n  onCollectionUpdate = (querySnapshot) => {\r\n    const plantas = [];\r\n    querySnapshot.forEach((doc) => {\r\n      const { nome, descricao, latitude, longitude, email } = doc.data();\r\n      plantas.push({\r\n        key: doc.id,\r\n        nome,\r\n        descricao,\r\n        latitude,\r\n        longitude,\r\n        email\r\n      });\r\n    });\r\n    this.setState({\r\n      plantas\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\r\n  }\r\n\r\n  handleLogout = () => {\r\n    const { dispatch } = this.props;\r\n    dispatch(logoutUser());\r\n  };\r\n\r\n  render() {\r\n    const { isLoggingOut, logoutError } = this.props; return (\r\n      <div>\r\n          <div className=\"divTitulo\">\r\n            <span>Plantas</span>\r\n          </div>\r\n        <div className=\"fundo\">\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>Nome</th>\r\n                <th>Descrição</th>\r\n                <th>Latitude</th>\r\n                <th>Longitude</th>\r\n                <th>Email</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.plantas.map(planta =>\r\n                <tr>\r\n                  <td>{planta.nome}</td>\r\n                  <td>{planta.descricao}</td>\r\n                  <td>{planta.latitude}</td>\r\n                  <td>{planta.longitude}</td>\r\n                  <td>{planta.email}</td>\r\n                </tr>\r\n              )}\r\n            </tbody>\r\n\r\n          </table>\r\n          <button className=\"myButton\" onClick={this.handleLogout}>Sair</button>\r\n        {isLoggingOut && <p>Logging Out....</p>}\r\n        {logoutError && <p>Error logging out</p>}\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isLoggingOut: state.auth.isLoggingOut,\r\n    logoutError: state.auth.logoutError\r\n  };\r\n}\r\n\r\nexport default compose(\r\n  connect(mapStateToProps),\r\n)(Plantas);"]},"metadata":{},"sourceType":"module"}