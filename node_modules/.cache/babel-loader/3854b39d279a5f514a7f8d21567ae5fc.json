{"ast":null,"code":"import{myFirebase}from\"../firebase/firebase\";export var LOGIN_REQUEST=\"LOGIN_REQUEST\";export var LOGIN_SUCCESS=\"LOGIN_SUCCESS\";export var LOGIN_FAILURE=\"LOGIN_FAILURE\";export var LOGOUT_REQUEST=\"LOGOUT_REQUEST\";export var LOGOUT_SUCCESS=\"LOGOUT_SUCCESS\";export var LOGOUT_FAILURE=\"LOGOUT_FAILURE\";export var VERIFY_REQUEST=\"VERIFY_REQUEST\";export var VERIFY_SUCCESS=\"VERIFY_SUCCESS\";var requestLogin=function requestLogin(){return{type:LOGIN_REQUEST};};var requestLogout=function requestLogout(){return{type:LOGOUT_REQUEST};};var verifyRequest=function verifyRequest(){return{type:VERIFY_REQUEST};};var verifySuccess=function verifySuccess(){return{type:VERIFY_SUCCESS};};var receiveLogin=function receiveLogin(user){return{type:LOGIN_SUCCESS,user:user};};var receiveLogout=function receiveLogout(user){return{type:LOGOUT_SUCCESS,user:user};};var loginError=function loginError(){return{type:LOGIN_FAILURE};};var logoutError=function logoutError(){return{type:LOGOUT_FAILURE};};export var loginUser=function loginUser(email,password){return function(dispatch){dispatch(requestLogin());myFirebase.auth().signInWithEmailAndPassword(email,password).then(function(user){dispatch(receiveLogin(user));}).catch(function(error){//Do something with the error if you want!\ndispatch(loginError());});};};export var logoutUser=function logoutUser(){return function(dispatch){dispatch(requestLogout());myFirebase.auth().signOut().then(function(){dispatch(receiveLogout());}).catch(function(error){//Do something with the error if you want!\ndispatch(logoutError());});};};export var verifyAuth=function verifyAuth(){return function(dispatch){dispatch(verifyRequest());myFirebase.auth().onAuthStateChanged(function(user){if(user!==null){dispatch(receiveLogin(user));}dispatch(verifySuccess());});};};","map":{"version":3,"sources":["D:/TCC/website-cancro-master/src/actions/auth.js"],"names":["myFirebase","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","VERIFY_REQUEST","VERIFY_SUCCESS","requestLogin","type","requestLogout","verifyRequest","verifySuccess","receiveLogin","user","receiveLogout","loginError","logoutError","loginUser","email","password","dispatch","auth","signInWithEmailAndPassword","then","catch","error","logoutUser","signOut","verifyAuth","onAuthStateChanged"],"mappings":"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","sourcesContent":["import { myFirebase } from \"../firebase/firebase\";\r\n\r\nexport const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAILURE = \"LOGIN_FAILURE\";\r\n\r\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\r\nexport const LOGOUT_FAILURE = \"LOGOUT_FAILURE\";\r\n\r\nexport const VERIFY_REQUEST = \"VERIFY_REQUEST\";\r\nexport const VERIFY_SUCCESS = \"VERIFY_SUCCESS\";\r\n\r\nconst requestLogin = () => {\r\n    return {\r\n        type: LOGIN_REQUEST\r\n    };\r\n};\r\n\r\nconst requestLogout = () => {\r\n    return {\r\n        type: LOGOUT_REQUEST\r\n    };\r\n}\r\n\r\nconst verifyRequest = () => {\r\n    return {\r\n        type: VERIFY_REQUEST\r\n    };\r\n}\r\n\r\nconst verifySuccess = () => {\r\n    return {\r\n        type: VERIFY_SUCCESS\r\n    };\r\n}\r\n\r\nconst receiveLogin = user => {\r\n    return {\r\n        type: LOGIN_SUCCESS,\r\n        user\r\n    };\r\n};\r\n\r\nconst receiveLogout = user => {\r\n    return {\r\n        type: LOGOUT_SUCCESS,\r\n        user\r\n    };\r\n};\r\n\r\nconst loginError = () => {\r\n    return {\r\n        type: LOGIN_FAILURE\r\n    };\r\n};\r\n\r\nconst logoutError = () => {\r\n    return {\r\n        type: LOGOUT_FAILURE\r\n    };\r\n};\r\n\r\nexport const loginUser = (email, password) => dispatch => {\r\n    dispatch(requestLogin());\r\n    myFirebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(email, password)\r\n        .then(user => {\r\n            dispatch(receiveLogin(user));\r\n        })\r\n        .catch(error => {\r\n            //Do something with the error if you want!\r\n            dispatch(loginError());\r\n        });\r\n};\r\n\r\nexport const logoutUser = () => dispatch => {\r\n    dispatch(requestLogout());\r\n    myFirebase\r\n        .auth()\r\n        .signOut()\r\n        .then(() => {\r\n            dispatch(receiveLogout());\r\n        })\r\n        .catch(error => {\r\n            //Do something with the error if you want!\r\n            dispatch(logoutError());\r\n        });\r\n};\r\n\r\nexport const verifyAuth = () => dispatch => {\r\n    dispatch(verifyRequest());\r\n    myFirebase.auth().onAuthStateChanged(user => {\r\n        if (user !== null) {\r\n            dispatch(receiveLogin(user));\r\n        }\r\n        dispatch(verifySuccess());\r\n    });\r\n};"]},"metadata":{},"sourceType":"module"}